import { configureStore } from "@reduxjs/toolkit";
import {
  GetOctansServices,
  PublicAccessToken,
  eSamAddress,
  eSAMGetByID,
  GetLocationFromOctansService,
  SearchProvidersFromOctansService,
  GetDayRoaster,
  SearchListOfSlot,
  GetAllEthnicity,
  GetAllGenders,
  AddAppointment,
  AddCustomerData,
  AddPatientForMedicare,
  CreateInvoicewithItems,
  UpdateDataforNotconfrimbooking,
  CheckOtpAgainstAppointment,
  GenerateInvitation,
  GetPracticeforPaymentConfigration,
  UpdatePatientForPayments,
  CreatePayment,
  StripeCheckOutSession,
  GetAppointmentByID,
  GetPatientByID,
  CancelAppointmentById,
  CheckOtpAgainstAppointmentDataClear,
  AddAppointmentDataClear,
  GetAppointmentByIDDataClear,
  SearchListOfSlotDataClear,
  UpdatePatientForPaymentsClear,CancelAppointmentByIdDataClear
} from "./actions";


const store = configureStore({
  reducer: {  
    GetOctansServices,
    PublicAccessToken,
    eSamAddress,
    eSAMGetByID,
    GetLocationFromOctansService,
    SearchProvidersFromOctansService,
    GetDayRoaster,
    SearchListOfSlot,
    GetAllEthnicity,
    GetAllGenders,
    AddAppointment,
    AddCustomerData,
    AddPatientForMedicare,
    CreateInvoicewithItems,
    UpdateDataforNotconfrimbooking,
    CheckOtpAgainstAppointment,
    GenerateInvitation,
    GetPracticeforPaymentConfigration,
    UpdatePatientForPayments,
    CreatePayment,
    StripeCheckOutSession,
    GetAppointmentByID,
    GetPatientByID,
    CancelAppointmentById,
    CheckOtpAgainstAppointmentDataClear,
    AddAppointmentDataClear,
    GetAppointmentByIDDataClear,
    SearchListOfSlotDataClear,
    UpdatePatientForPaymentsClear,
    CancelAppointmentByIdDataClear
  },
});
export default store;
